# .tmux.conf
# Author: Olafur Osvaldsson <osvaldsson@icelandic.net>
# Source: https://github.com/osvaldsson/dotfiles/.tmux.conf

# Set the default terminal
#set -g default-terminal "xterm-256color"

# UTF-8
set-option -g status-utf8 on

# Use a different action key
set-option -g prefix C-a
unbind C-b
bind-key C-a send-prefix

# Start numbering windows at 1
set-option -g base-index 1

# Enable mouse support
set -g mouse-select-pane on
set -g mode-mouse on

# Bind C-a to last-window

# Set the status bar refresh interval
set -g status-interval 5

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left "#[fg=green]#H"

# Add session information and increase the length to 50
set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 3-)"
set -g status-right-length 50

# Set window notificatins
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename

# Change the binding of split-window key
unbind %    # Remove default binding since we're replacing
bind s split-window -h
bind v split-window -v

# Enable vi mode keys
setw -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "xclip"

# Clipboard functionality (xsel does not fork like xclip)
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xsel -ob)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xsel -ib" \; display-message "Buffer copied to clipboard"

# Use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use vim motion keys while in copy mode
setw -g mode-keys vi

# Use the vim resize keys.
# The number at the end is how much the pane will be resized
# and 1 is fairly small -- you might want to tweak this
bind < resize-pane -L 6
bind > resize-pane -R 6
bind - resize-pane -D 3
bind + resize-pane -U 3

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Reload .tmux.conf on request
bind-key r run "tmux source-file ~/.tmux.conf" \; display-message "~/.tmux.conf reloaded"
